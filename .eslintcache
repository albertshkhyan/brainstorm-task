[{"D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\app\\reducers\\users.js":"1","D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\api\\users.js":"2","D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\app\\sagas\\createUserSaga.js":"3","D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\components\\UserForm.jsx":"4","D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\configs\\config.js":"5","D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\components\\UserTable.jsx":"6","D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\containers\\UserEdit.jsx":"7","D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\containers\\index.js":"8","D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\App.js":"9","D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\configs\\types.js":"10","D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\app\\sagas\\editUserSaga.js":"11","D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\app\\sagas\\index.js":"12","D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\app\\sagas\\usersGetAllSaga.js":"13","D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\components\\SwitchButton.jsx":"14"},{"size":3791,"mtime":1609375562000,"results":"15","hashOfConfig":"16"},{"size":3744,"mtime":1609374206000,"results":"17","hashOfConfig":"16"},{"size":886,"mtime":1609374068000,"results":"18","hashOfConfig":"16"},{"size":4808,"mtime":1609373448000,"results":"19","hashOfConfig":"16"},{"size":638,"mtime":1609372334000,"results":"20","hashOfConfig":"16"},{"size":9583,"mtime":1609378282000,"results":"21","hashOfConfig":"16"},{"size":410,"mtime":1609371514000,"results":"22","hashOfConfig":"16"},{"size":447,"mtime":1609371538000,"results":"23","hashOfConfig":"16"},{"size":2348,"mtime":1609371648000,"results":"24","hashOfConfig":"16"},{"size":1063,"mtime":1609372044000,"results":"25","hashOfConfig":"16"},{"size":889,"mtime":1609374024000,"results":"26","hashOfConfig":"16"},{"size":628,"mtime":1609372174000,"results":"27","hashOfConfig":"16"},{"size":1122,"mtime":1609374206000,"results":"28","hashOfConfig":"16"},{"size":2202,"mtime":1609378302000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14xdfw7",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\app\\reducers\\users.js",[],"D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\api\\users.js",[],"D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\app\\sagas\\createUserSaga.js",[],"D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\components\\UserForm.jsx",["60"],"D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\configs\\config.js",["61"],"D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\components\\UserTable.jsx",["62","63","64"],"import React, { useRef } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Table from '@material-ui/core/Table';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport SwitchButton from './SwitchButton';\r\nimport Preloader from './Preloader';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { sortingSG, deleteUserSG } from 'app/reducers/users';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n\thead: {\r\n\t\tbackgroundColor: '#F1F3F5',\r\n\t\tcolor: theme.palette.common.black,\r\n\t},\r\n\tbody: {\r\n\t\tfontSize: 14,\r\n\t},\r\n}))(TableCell);\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n\tif (b[orderBy] < a[orderBy]) {\r\n\t\treturn -1;\r\n\t}\r\n\tif (b[orderBy] > a[orderBy]) {\r\n\t\treturn 1;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n\treturn order === 'desc'\r\n\t\t? (a, b) => descendingComparator(a, b, orderBy)\r\n\t\t: (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n\tconst stabilizedThis = array.map((el, index) => [el, index]);\r\n\tstabilizedThis.sort((a, b) => {\r\n\t\tconst order = comparator(a[0], b[0]);\r\n\t\tif (order !== 0) return order;\r\n\t\treturn a[1] - b[1];\r\n\t});\r\n\treturn stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n\t{ id: 'photo', numeric: false, disablePadding: true, label: 'Photo' },\r\n\t{ id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n\t{ id: 'location', numeric: false, disablePadding: false, label: 'Location' },\r\n\t{ id: 'registeredDate', numeric: true, disablePadding: false, label: 'Registerd date' },\r\n\t{ id: 'lastActiveDate', numeric: false, disablePadding: false, label: 'Last active date' },\r\n\t{ id: 'email', numeric: false, disablePadding: false, label: 'Email' },\r\n\t{ id: 'action', numeric: false, disablePadding: false, label: 'Action' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n\tconst { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n\tconst createSortHandler = (property) => (event) => {\r\n\t\tonRequestSort(event, property);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TableHead>\r\n\t\t\t<TableRow>\r\n\t\t\t\t<StyledTableCell padding=\"checkbox\">\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tindeterminate={numSelected > 0 && numSelected < rowCount}\r\n\t\t\t\t\t\tchecked={rowCount > 0 && numSelected === rowCount}\r\n\t\t\t\t\t\tonChange={onSelectAllClick}\r\n\t\t\t\t\t\tinputProps={{ 'aria-label': 'select all desserts' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</StyledTableCell>\r\n\t\t\t\t{headCells.map((headCell) => (\r\n\t\t\t\t\t<StyledTableCell\r\n\t\t\t\t\t\tkey={headCell.id}\r\n\t\t\t\t\t\t// align={headCell.numeric ? 'right' : 'left'}\r\n\t\t\t\t\t\talign=\"left\"\r\n\t\t\t\t\t\tpadding={headCell.disablePadding ? 'none' : 'default'}\r\n\t\t\t\t\t\tsortDirection={orderBy === headCell.id ? order : false}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TableSortLabel\r\n\t\t\t\t\t\t\tactive={orderBy === headCell.id}\r\n\t\t\t\t\t\t\tdirection={orderBy === headCell.id ? order : 'asc'}\r\n\t\t\t\t\t\t\tonClick={createSortHandler(headCell.id)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{headCell.label}\r\n\t\t\t\t\t\t\t{orderBy === headCell.id ? (\r\n\t\t\t\t\t\t\t\t<span className={classes.visuallyHidden}>\r\n\t\t\t\t\t\t\t\t\t{order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</TableSortLabel>\r\n\t\t\t\t\t</StyledTableCell>\r\n\t\t\t\t))}\r\n\t\t\t</TableRow>\r\n\t\t</TableHead>\r\n\t);\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n\tnumSelected: PropTypes.number.isRequired,\r\n\tonRequestSort: PropTypes.func.isRequired,\r\n\tonSelectAllClick: PropTypes.func.isRequired,\r\n\torder: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n\torderBy: PropTypes.string.isRequired,\r\n\trowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t},\r\n\tpaper: {\r\n\t\twidth: '100%',\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t},\r\n\ttable: {\r\n\t\tminWidth: 750,\r\n\t},\r\n\tvisuallyHidden: {\r\n\t\tborder: 0,\r\n\t\tclip: 'rect(0 0 0 0)',\r\n\t\theight: 1,\r\n\t\tmargin: -1,\r\n\t\toverflow: 'hidden',\r\n\t\tpadding: 0,\r\n\t\tposition: 'absolute',\r\n\t\ttop: 20,\r\n\t\twidth: 1,\r\n\t},\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n\tconst classes = useStyles();\r\n\tconst [order, setOrder] = React.useState('asc');\r\n\tconst [orderBy, setOrderBy] = React.useState('name');\r\n\tconst [selected, setSelected] = React.useState([]);\r\n\tlet history = useHistory();\r\n\r\n\tconst handleRowClick = (event, userId) => {\r\n\t\tif (event.target.type === 'checkbox') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\thistory.push(`/edit_user/${userId}`);\r\n\t};\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst usersData = useSelector((state) => state.users.users);\r\n\tconst isLoading = useSelector((state) => state.users.isLoading);\r\n\r\n\tconst handleRequestSort = (event, property) => {\r\n\t\tconst isAsc = orderBy === property && order === 'asc';\r\n\t\tif (property === 'action') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdispatch(sortingSG(property, order)); //sort, order\r\n\t\tsetOrder(isAsc ? 'desc' : 'asc');\r\n\t\tsetOrderBy(property);\r\n\t};\r\n\r\n\tconst deleteUser = (event, userId) => {\r\n\t\tevent.stopPropagation(); //add for not change route (work handleRowClick)\r\n\t\tdispatch(deleteUserSG(userId));\r\n\t};\r\n\r\n\tconst handleSelectAllClick = (event) => {\r\n\t\tif (event.target.checked) {\r\n\t\t\tconst newSelecteds = usersData && usersData.map((n) => n.name);\r\n\t\t\tsetSelected(newSelecteds);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetSelected([]);\r\n\t};\r\n\r\n\tconst handleClick = (event, name) => {\r\n\t\tconst selectedIndex = selected.indexOf(name);\r\n\t\tlet newSelected = [];\r\n\r\n\t\tif (selectedIndex === -1) {\r\n\t\t\tnewSelected = newSelected.concat(selected, name);\r\n\t\t} else if (selectedIndex === 0) {\r\n\t\t\tnewSelected = newSelected.concat(selected.slice(1));\r\n\t\t} else if (selectedIndex === selected.length - 1) {\r\n\t\t\tnewSelected = newSelected.concat(selected.slice(0, -1));\r\n\t\t} else if (selectedIndex > 0) {\r\n\t\t\tnewSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n\t\t}\r\n\r\n\t\tsetSelected(newSelected);\r\n\t};\r\n\r\n\tconst isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t{/* <EnhancedTableToolbar numSelected={selected.length} /> */}\r\n\t\t\t\t<TableContainer>\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tclassName={classes.table}\r\n\t\t\t\t\t\taria-labelledby=\"tableTitle\"\r\n\t\t\t\t\t\t// size={dense ? 'small' : 'medium'}\r\n\t\t\t\t\t\taria-label=\"enhanced table\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<EnhancedTableHead\r\n\t\t\t\t\t\t\tclasses={classes}\r\n\t\t\t\t\t\t\tnumSelected={selected.length}\r\n\t\t\t\t\t\t\torder={order}\r\n\t\t\t\t\t\t\torderBy={orderBy}\r\n\t\t\t\t\t\t\tonSelectAllClick={handleSelectAllClick}\r\n\t\t\t\t\t\t\tonRequestSort={handleRequestSort}\r\n\t\t\t\t\t\t\trowCount={10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{/* {stableSort(usersData, getComparator(order, orderBy)) */}\r\n\r\n\t\t\t\t\t\t\t{isLoading && (\r\n\t\t\t\t\t\t\t\t<TableRow align=\"center\">\r\n\t\t\t\t\t\t\t\t\t<TableCell rowSpan={4} colSpan={10} align=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\" my={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Preloader />\r\n\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{!isLoading &&\r\n\t\t\t\t\t\t\t\tusersData &&\r\n\t\t\t\t\t\t\t\tusersData.map((row, index) => {\r\n\t\t\t\t\t\t\t\t\tconst isItemSelected = isSelected(row.name);\r\n\t\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<TableRow\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handleRowClick(event, row.id)}\r\n\t\t\t\t\t\t\t\t\t\t\thover\r\n\t\t\t\t\t\t\t\t\t\t\trole=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-checked={isItemSelected}\r\n\t\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={row.id}\r\n\t\t\t\t\t\t\t\t\t\t\tselected={isItemSelected}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell padding=\"checkbox\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handleClick(event, row.name)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={isItemSelected}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{ 'aria-labelledby': labelId }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Avatar alt=\"avatar\" src={row.photo} />\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.name}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.location}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.lastActiveDate}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.registeredDate}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.email}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Box width={1} display=\"flex\" justifyContent=\"space-between\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SwitchButton row={row} disabled={row.disabled} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => deleteUser(event, row.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"delete\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.margin}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteIcon style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</TableContainer>\r\n\t\t\t</Paper>\r\n\t\t</div>\r\n\t);\r\n}\r\n","D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\containers\\UserEdit.jsx",[],"D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\containers\\index.js",[],"D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\App.js",["65","66"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Header from \"components/Header\";\n\n\nimport AppMenu from \"components/AppMenu\";\nimport {\n  Users,\n  Recipes,\n  NewUser,\n  UserEdit,\n  HomePage,\n  QuickStart,\n  Restaurants,\n  UsersPremium,\n} from './containers';\nimport { Route, Switch } from \"react-router-dom\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\"\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    background: theme.palette.primary.main,\n    color: \"#fff\"\n  },\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n}));\n\n\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Header />\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <AppMenu />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/recipes\" component={Recipes} />\n            <Route exact path=\"/users\" component={Users} />\n            <Route exact path=\"/quick_start\" component={QuickStart} />\n            <Route exact path=\"/resaurants\" component={Restaurants} />\n            <Route exact path=\"/premium_users\" component={UsersPremium} />\n            <Route exact path=\"/new_user\" component={NewUser} />\n            <Route exact path=\"/edit_user/:userId\" component={UserEdit} />\n          </Switch>\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\configs\\types.js",[],"D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\app\\sagas\\editUserSaga.js",["67"],"D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\app\\sagas\\index.js",[],"D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\app\\sagas\\usersGetAllSaga.js",[],"D:\\FULLSTACK\\my_porjects_fullstack\\brain-storm-task\\src\\components\\SwitchButton.jsx",[],{"ruleId":"68","severity":1,"message":"69","line":11,"column":8,"nodeType":"70","messageId":"71","endLine":11,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":1,"column":1,"nodeType":"74","endLine":22,"endColumn":2},{"ruleId":"68","severity":1,"message":"75","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":23},{"ruleId":"68","severity":1,"message":"76","line":48,"column":10,"nodeType":"70","messageId":"71","endLine":48,"endColumn":23},{"ruleId":"68","severity":1,"message":"77","line":54,"column":10,"nodeType":"70","messageId":"71","endLine":54,"endColumn":20},{"ruleId":"68","severity":1,"message":"78","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"79","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":14},{"ruleId":"68","severity":1,"message":"80","line":1,"column":32,"nodeType":"70","messageId":"71","endLine":1,"endColumn":38},"no-unused-vars","'PhotoIcon' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useRef' is defined but never used.","'getComparator' is defined but never used.","'stableSort' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'select' is defined but never used."]